{"version":3,"sources":["utils/Shapes.ts","utils/GraphicsManipulator.ts","components/GraphicsCore/GraphicsCore.tsx","utils/HighlightColors.ts","components/SettingsPane/SettingsPane.tsx","utils/mediaHooks/useUserMedia.ts","utils/OpenCVHelper.ts","components/NavBar/NavBar.tsx","components/Welcome/Welcome.tsx","components/HelpPane/HelpPane.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Shapes","GraphicsManipulator","context","canvas","event","rect","getBoundingClientRect","x","changedTouches","clientX","left","y","clientY","top","imageData","getImageData","data","r","g","b","pixelRGB","HSV","h","s","v","min","Math","max","delta","hsv","numToAdd","HSV4","contrast","intercept","i","length","j","GraphicsCore","cvHelper","hideWelcome","hideWelcomeFunc","canvasEl","useRef","canvasEl2","useEffect","canvasUpdatingInterval","canvasElCurrent","current","canvasEl2Current","getContext","context2","setCanvasElCurrent","addEventListener","getPixelRGBMouse","hsvSelectColor","RGBtoHSV","setHSVSelectColor","getPixelRGBTouch","setInterval","a","toDraw","getLatestVideoFrame","drawImage","window","innerWidth","innerHeight","clonedImageData","ImageData","Uint8ClampedArray","width","height","contrastImage","putImageData","getNewImageData","draw","clearInterval","setSourceAndDestination","className","ref","style","margin","padding","hidden","HIGHLIGHT_COLORS","RED","shapes","CIRCLE","RECTANGLE","NONE","prevHighlightColorIndex","prevShapeIndex","SettingsPane","hide","setHide","useState","shapeIndex","setShapeIndex","colorIndex","setColorIndex","highlightColors","Object","keys","map","color","id","value","onChange","selectedShape","target","selectedIndex","setShape","shape","key","toLowerCase","selectedColor","setHighlightColor","onClick","prevShape","prevColor","USER_MEDIA_CAPTURE_OPTIONS","video","facingMode","exact","useUserMedia","requestedMedia","undefined","mediaStream","setMediaStream","getTracks","forEach","track","stop","enableStream","navigator","mediaDevices","getUserMedia","stream","OpenCVHelper","cv","videoEl","cvVideoCapture","cvSource","cvDestination","cvHSV","cvHSVSelectColor","highlightColor","this","VideoCapture","setHeightAndWidth","Mat","e","console","log","CV_8UC4","CV_8UC1","Error","image","toDataURL","link","document","createElement","download","Date","toISOString","href","click","MatVector","source","matFromImageData","lowerHSV","GetHsvFormatted","higherHSV","cvtColor","COLOR_RGB2HSV","low","rows","cols","type","high","inRange","contours","hierarchy","findContours","RETR_LIST","CHAIN_APPROX_SIMPLE","groupedContoursAsRectangles","groupContoursAsRectangles","drawRect","drawCircle","delete","contoursAsRectangles","RectVector","weights","IntVector","size","obj","get","boundingRect","push_back","groupRectangles","beginPath","lineWidth","strokeStyle","stroke","NavBar","setHideSetting","setHideHelp","icon","faQuestionCircle","getFrameAsImage","faCamera","faCog","Welcome","instructData","desc","HelpPane","hideFunc","windowWidth","windowHeight","stepsContent","step","index","stepData","faTimesCircle","Step","url","backgroundImage","newOpenCVHelper","App","setHideWelcome","hideSet","setHideSet","hideHelp","setHeight","setWidth","setVideoEl","srcObject","autoPlay","playsInline","muted","onCanPlay","play","handleCanPlay","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67f21146.chunk.js","sourcesContent":["// Shapes is the shape of the highlight outline.\nexport enum Shapes {\n\tCIRCLE = \"Circle\",\n\tRECTANGLE = \"Rectangle\",\n\tNONE = \"None\"\n}\n\nexport const RECTANGLE_LINE_WIDTH = 5;\nexport const CIRCLE_LINE_WIDTH = 5;\nexport const LINE_TYPE = 8;","export const BORDER_THRESHOLD = 15;\nexport const HSV_THRESHOLD = 60;\n\nexport class GraphicsManipulator {\n\tstatic getPixelRGBTouch(\n\t\tcontext: CanvasRenderingContext2D,\n\t\tcanvas: HTMLCanvasElement,\n\t\tevent: TouchEvent\n\t): PixelRGB {\n\t\tconst rect = canvas.getBoundingClientRect();\n\n\t\tconst x = event.changedTouches[0].clientX - rect.left;\n\t\tconst y = event.changedTouches[0].clientY - rect.top;\n\t\tconst imageData = context.getImageData(x, y, 1, 1).data;\n\t\treturn {\n\t\t\tr: imageData[0],\n\t\t\tg: imageData[1],\n\t\t\tb: imageData[2]\n\t\t};\n\t}\n\n\tstatic getPixelRGBMouse(\n\t\tcontext: CanvasRenderingContext2D,\n\t\tcanvas: HTMLCanvasElement,\n\t\tevent: MouseEvent\n\t): PixelRGB {\n\t\tconst rect = canvas.getBoundingClientRect();\n\t\tconst x = event.clientX - rect.left;\n\t\tconst y = event.clientY - rect.top;\n\t\tconst imageData = context.getImageData(x, y, 1, 1).data;\n\t\treturn {\n\t\t\tr: imageData[0],\n\t\t\tg: imageData[1],\n\t\t\tb: imageData[2]\n\t\t};\n\t}\n\n\t// Code taken from: http://coecsl.ece.illinois.edu/ge423/spring05/group8/finalproject/hsv_writeup.pdf\n\t// based on: https://docs.opencv.org/3.4/de/d25/imgproc_color_conversions.html#color_convert_rgb_hsv \n\tstatic RGBtoHSV(pixelRGB: PixelRGB): PixelHSV {\n\t\tconst { r, g, b } = pixelRGB;\n\n\t\tconst HSV: PixelHSV = {\n\t\t\th: 0,\n\t\t\ts: 0,\n\t\t\tv: 0\n\t\t}\n\n\t\tconst min = Math.min(r, g, b);\n\t\tconst max = Math.max(r, g, b);\n\n\t\t// V\n\t\tHSV.v = max;\n\n\t\t// S\n\t\tconst delta = max - min;\n\t\tif (max === 0) {\n\t\t\tHSV.s = 0;\n\t\t\tHSV.h = -1;\n\t\t\treturn HSV;\n\t\t}\n\n\t\tHSV.s = (delta / max) * 255;\n\n\t\t// H\n\t\tif (r === max) {\n\t\t\tHSV.h = (g - b) / delta;\n\t\t} else if (g === max) {\n\t\t\tHSV.h = 2 + (b - r) / delta;\n\t\t} else {\n\t\t\tHSV.h = 4 + (r - g) / delta;\n\t\t}\n\n\t\tHSV.h *= 60;\n\n\t\tif (HSV.h < 0) {\n\t\t\tHSV.h += 360;\n\t\t}\n\n\t\tHSV.h /= 2;\n\n\t\treturn HSV;\n\t}\n\n\t/**\n\t * Gets formatted hsv\n\t * @param hsv hsv\n\t * @param numToAdd number to offset HSV by\n\t * @param HSV4 4th param opencv requests // TODO: (alpha?)\n\t */\n\tstatic GetHsvFormatted(hsv: PixelHSV, numToAdd: number, HSV4: number): number[] {\n\t\treturn [\n\t\t\thsv.h += numToAdd,\n\t\t\thsv.s += numToAdd,\n\t\t\thsv.v += numToAdd,\n\t\t\tHSV4\n\t\t]\n\t}\n\n\t// contrast must be [-100..100]\n\t// https://stackoverflow.com/questions/10521978/html5-canvas-image-contrast\n\tstatic contrastImage(imageData: ImageData, contrast: number) {\n\t\tconst data = imageData.data;\n\t\tconst contrastAsDecimalShiftRange = (contrast / 100) + 1;\n\t\tconst intercept = 128 * (1 - contrastAsDecimalShiftRange);\n\t\tfor (let i = 0; i < data.length; i += 4) {\n\t\t\tfor (let j = i; j < i + 3; j++) {\n\t\t\t\tdata[j] = data[j] * contrast + intercept;\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n}\n\nexport type PixelRGB = {\n\tr: number,\n\tg: number,\n\tb: number\n}\n\nexport type PixelHSV = {\n\th: number,\n\ts: number,\n\tv: number\n}","import React, { useRef, useEffect } from 'react';\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\nimport './GraphicsCore.css';\nimport { GraphicsManipulator } from '../../utils/GraphicsManipulator';\n\ntype GraphicsCoreProps = {\n\tcvHelper: OpenCVHelper,\n\thideWelcome: Boolean,\n\thideWelcomeFunc: React.Dispatch<React.SetStateAction<Boolean>>\n}\n\nconst REFRESH_RATE = 0.017;\nconst HEIGHT_MULTIPLIER = 0.9\n\n// GraphicsCore is the canvas element that also keeps track of all the OpenCV state information\nexport const GraphicsCore: React.FC<GraphicsCoreProps> = ({\n\tcvHelper,\n\thideWelcome,\n\thideWelcomeFunc\n}) => {\n\tconst canvasEl = useRef<HTMLCanvasElement | null>(null);\n\tconst canvasEl2 = useRef<HTMLCanvasElement | null>(null);\n\n\tuseEffect(() => {\n\t\tlet canvasUpdatingInterval: NodeJS.Timeout;\n\n\t\tif (canvasEl) {\n\t\t\tconst canvasElCurrent = canvasEl.current;\n\t\t\tconst canvasEl2Current = canvasEl2.current;\n\n\t\t\tif (!canvasElCurrent || !canvasEl2Current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst context = canvasElCurrent.getContext('2d');\n\t\t\tconst context2 = canvasEl2Current.getContext('2d');\n\n\t\t\tif (!context || !context2) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcvHelper.setCanvasElCurrent(canvasElCurrent, canvasEl2Current);\n\n\t\t\tcanvasElCurrent.addEventListener(\"mousedown\", (event) => {\n\t\t\t\tif (!hideWelcome) {\n\t\t\t\t\thideWelcomeFunc(true);\n\t\t\t\t}\n\t\t\t\tconst pixelRGB = GraphicsManipulator.getPixelRGBMouse(context, canvasEl2Current, event);\n\t\t\t\tconst hsvSelectColor = GraphicsManipulator.RGBtoHSV(pixelRGB);\n\t\t\t\tcvHelper.setHSVSelectColor(hsvSelectColor);\n\t\t\t});\n\n\t\t\tcanvasElCurrent.addEventListener(\"touchend\", (event) => {\n\t\t\t\tif (!hideWelcome) {\n\t\t\t\t\thideWelcomeFunc(true);\n\t\t\t\t}\n\t\t\t\tconst pixelRGB = GraphicsManipulator.getPixelRGBTouch(context, canvasEl2Current, event);\n\t\t\t\tconst hsvSelectColor = GraphicsManipulator.RGBtoHSV(pixelRGB);\n\t\t\t\tcvHelper.setHSVSelectColor(hsvSelectColor);\n\t\t\t})\n\n\t\t\tcanvasUpdatingInterval = setInterval(async () => {\n\t\t\t\tlet toDraw = cvHelper.getLatestVideoFrame();\n\n\t\t\t\tcontext.drawImage(toDraw, 0, 0, window.innerWidth, window.innerHeight * HEIGHT_MULTIPLIER);\n\n\t\t\t\t// clone context 1 to context 2 but contrasted\n\t\t\t\tconst imageData = context.getImageData(0, 0, window.innerWidth, window.innerHeight * HEIGHT_MULTIPLIER);\n\n\t\t\t\tconst clonedImageData = new ImageData(\n\t\t\t\t\tnew Uint8ClampedArray(imageData.data),\n\t\t\t\t\timageData.width,\n\t\t\t\t\timageData.height\n\t\t\t\t);\n\n\t\t\t\t// context2.putImageData(imageData, 0, 0);\n\t\t\t\t// const newImageData = context2.getImageData(0, 0, window.innerWidth, window.innerHeight * HEIGHT_MULTIPLIER);\n\t\t\t\tGraphicsManipulator.contrastImage(clonedImageData, 2.5);\n\n\t\t\t\t// uncomment to see live contrast data\n\t\t\t\tcontext2.putImageData(clonedImageData, 0, 0);\n\t\t\t\tconst getNewImageData = context2.getImageData(0, 0, window.innerWidth, window.innerHeight * HEIGHT_MULTIPLIER);\n\t\t\t\tcontext.putImageData(getNewImageData, 0, 0);\n\n\t\t\t\tcvHelper.draw(context, canvasElCurrent, context2, canvasEl2Current, getNewImageData);\n\t\t\t}, REFRESH_RATE);\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearInterval(canvasUpdatingInterval);\n\t\t}\n\t}, [canvasEl, cvHelper]);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tif (canvasEl && canvasEl.current) {\n\t\t\t\tcanvasEl.current.width = window.innerWidth;\n\t\t\t\tcanvasEl.current.height = window.innerHeight * HEIGHT_MULTIPLIER;\n\t\t\t}\n\n\t\t\tcvHelper.setSourceAndDestination(window.innerHeight * HEIGHT_MULTIPLIER, window.innerWidth);\n\t\t});\n\n\t}, [canvasEl, cvHelper]);\n\n\treturn <div className=\"graphics-core\">\n\t\t<canvas height={window.innerHeight * HEIGHT_MULTIPLIER} width={window.innerWidth} ref={canvasEl} />\n\t\t<canvas style={{\n\t\t\tmargin: 0,\n\t\t\tpadding: 0,\n\t\t}} hidden height={window.innerHeight * HEIGHT_MULTIPLIER} width={window.innerWidth} ref={canvasEl2} />\n\t</div>\n}","// HighlightColors is the highlight outline colors.\nexport const HIGHLIGHT_COLORS: HighlightColors = {\n\tRED: \"#FF0000\",\n\t// BLACK: [0, 0, 0, 255],\n\t// WHITE: [255, 255, 255, 255],\n\t// GREEN: [0, 255, 0, 255],\n\t// BLUE: [0, 0, 255, 255],\n\t// PURPLE: [102, 0, 204, 255],\n\t// YELLOW: [255, 255, 51, 255],\n\t// ORANGE: [255, 153, 51, 255]\n}\n\nexport type HighlightColors = {\n\t[color: string]: HighlightColor\n}\n\nexport type HighlightColor = string;","import React, { useState } from 'react';\nimport { Shapes } from '../../utils/Shapes';\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\nimport { HIGHLIGHT_COLORS, HighlightColor } from '../../utils/HighlightColors';\nimport { ReactStateSetter } from '../../utils/CallbackType';\nimport './SettingsPane.css';\n\ntype SettingsPaneProps = {\n\tcvHelper: OpenCVHelper,\n\thide: string,\n\tsetHide: React.Dispatch<React.SetStateAction<Boolean>>\n}\n\nconst shapes: Shapes[] = [Shapes.CIRCLE, Shapes.RECTANGLE, Shapes.NONE];\nlet prevHighlightColorIndex: number = 0;\nlet prevShapeIndex: number = 0;\n\n// SettingsPane is the bottom bar. When settings are changed, it calls callback functions \n// provided within the props.\nexport const SettingsPane: React.FC<SettingsPaneProps> = ({\n\tcvHelper,\n\thide,\n\tsetHide\n}) => {\n\tconst[shapeIndex, setShapeIndex] = useState<number>(0);\n\tconst[colorIndex, setColorIndex] = useState<number>(0);\n\n\tconst highlightColors = Object.keys(HIGHLIGHT_COLORS).map((color) => {\n\t\treturn color;\n\t})\n\treturn <div className={\"settings-pane \" + hide}>\n\t\t<h1>Settings</h1>\n\t\t<div id=\"shapes-pane\">\n\t\t\t<h2>Shape</h2>\n\t\t\t<select value={shapes[shapeIndex]} onChange={(event) => {\n\t\t\t\tconst selectedShape = shapes[event.target.selectedIndex];\n\t\t\t\tcvHelper.setShape(selectedShape);\n\t\t\t\tsetShapeIndex(event.target.selectedIndex);\n\t\t\t}}>\n\t\t\t\t{shapes.map((shape) => {\n\t\t\t\t\treturn <option key={shape}>\n\t\t\t\t\t\t{shape}\n\t\t\t\t\t</option>\n\t\t\t\t})}\n\t\t\t</select>\n\t\t</div>\n\t\t<div id=\"colors-pane\">\n\t\t\t<h2>Color</h2>\n\t\t\t<select value={highlightColors[colorIndex].toLowerCase()} onChange={(event) => {\n\t\t\t\tconst selectedColor = HIGHLIGHT_COLORS[highlightColors[event.target.selectedIndex]];\n\t\t\t\tcvHelper.setHighlightColor(selectedColor);\n\t\t\t\tsetColorIndex(event.target.selectedIndex);\n\t\t\t}}>\n\t\t\t\t{highlightColors.map((color) => {\n\t\t\t\t\treturn <option key={color}>\n\t\t\t\t\t\t{color.toLowerCase()}\n\t\t\t\t\t</option>\n\t\t\t\t})}\n\t\t\t</select>\n\t\t</div>\n\t\t<div>\n\t\t\t<button onClick={() => {\n\t\t\t\tsetHide(true);\n\t\t\t\tprevShapeIndex = shapeIndex;\n\t\t\t\tprevHighlightColorIndex = colorIndex;\n\t\t\t}}>Save</button>\n\t\t\t<button onClick={() => {\n\t\t\t\tconst prevShape = shapes[prevShapeIndex];\n\t\t\t\tconst prevColor = HIGHLIGHT_COLORS[highlightColors[prevHighlightColorIndex]];\n\t\t\t\tcvHelper.setShape(prevShape);\n\t\t\t\tcvHelper.setHighlightColor(prevColor);\n\t\t\t\t\n\t\t\t\tsetColorIndex(prevHighlightColorIndex);\n\t\t\t\tsetShapeIndex(prevShapeIndex);\n\t\t\t\tsetHide(true);\n\t\t\t}}>Cancel</button>\n\t\t</div>\n\t</div>\n}","import { useState, useEffect } from 'react';\nimport { ReactStateSetter } from '../CallbackType';\n\n// useUserMedia is inspired by\n// https://blog.logrocket.com/responsive-camera-component-react-hooks/\n\nexport const USER_MEDIA_CAPTURE_OPTIONS: MediaStreamConstraints = {\n\tvideo: {\n\t\tfacingMode: \"environment\",\n\t\twidth: {\n\t\t\texact: 1280\n\t\t},\n\t\theight: {\n\t\t\texact: 720\n\t\t}\n\t}\n}\n\nexport const useUserMedia = (requestedMedia: MediaStreamConstraints) => {\n\tconst [mediaStream, setMediaStream] = useState<MediaStream | null | undefined>(undefined);\n\n\tuseEffect(() => {\n\t\tif (!mediaStream) {\n\t\t\tenableStream(requestedMedia, setMediaStream);\n\t\t\treturn;\n\t\t}\n\n\t\t// Clean up and remove all media tracks\n\t\treturn () => {\n\t\t\tmediaStream.getTracks().forEach((track) => {\n\t\t\t\ttrack.stop();\n\t\t\t})\n\t\t}\n\t}, [mediaStream, requestedMedia]);\n\n\treturn mediaStream;\n}\n\nasync function enableStream(\n\trequestedMedia: MediaStreamConstraints,\n\tsetMediaStream: ReactStateSetter<MediaStream | null | undefined>\n) {\n\ttry {\n\t\tconst stream = await navigator.mediaDevices.getUserMedia(requestedMedia);\n\t\tsetMediaStream(stream);\n\t} catch (e) {\n\t\tsetMediaStream(null);\n\t}\n}","import { PixelHSV, GraphicsManipulator, BORDER_THRESHOLD, HSV_THRESHOLD } from '../utils/GraphicsManipulator';\nimport { HighlightColor, HIGHLIGHT_COLORS } from './HighlightColors';\nimport { Shapes, RECTANGLE_LINE_WIDTH, CIRCLE_LINE_WIDTH, LINE_TYPE } from './Shapes';\n\n// OpenCVHelper will be the helper class that does a whole bunch of god calculations for\n// GraphicsCore.\nexport class OpenCVHelper {\n\tstatic newOpenCVHelper() {\n\t\treturn new OpenCVHelper();\n\t}\n\n\tprivate videoEl: React.RefObject<HTMLVideoElement> | undefined = undefined;\n\tprivate height: number | undefined = undefined;\n\tprivate width: number | undefined = undefined;\n\tprivate cvVideoCapture: any = undefined;\n\tprivate cvSource: any = undefined;\n\tprivate cvDestination: any = undefined;\n\tprivate cvHSV: any = undefined;\n\tprivate cvHSVSelectColor: PixelHSV | undefined = undefined;\n\tprivate highlightColor: HighlightColor = HIGHLIGHT_COLORS.RED;\n\tprivate shape: Shapes = Shapes.CIRCLE;\n\tprivate canvasElCurrent: HTMLCanvasElement | undefined = undefined;\n\tprivate canvasEl2Current: HTMLCanvasElement | undefined = undefined;\n\n\tconstructor(\n\t\tprivate cv = window.cv\n\t) { }\n\n\tpublic setVideoEl(videoEl: React.RefObject<HTMLVideoElement>, height: number, width: number) {\n\t\tthis.videoEl = videoEl;\n\t\tif (videoEl.current) {\n\t\t\ttry {\n\t\t\t\tif (this.videoEl.current) {\n\t\t\t\t\tthis.cvVideoCapture = new this.cv.VideoCapture(this.videoEl.current);\n\t\t\t\t}\n\t\t\t\tthis.setHeightAndWidth(height, width);\n\n\t\t\t\t// Check for cv.Mat to prevent race condition\t\n\t\t\t\tif (this.cv.Mat) {\n\t\t\t\t\tthis.setSourceAndDestination(height, width);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"ERR: \", e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setSourceAndDestination(height: number, width: number) {\n\t\tthis.setHeightAndWidth(height, width);\n\t\tthis.cvSource = new this.cv.Mat(height, width, this.cv.CV_8UC4);\n\t\tthis.cvDestination = new this.cv.Mat(height, width, this.cv.CV_8UC1);\n\t\tthis.cvHSV = new this.cv.Mat();\n\t}\n\n\tpublic getHighlightColor(): HighlightColor {\n\t\treturn this.highlightColor;\n\t}\n\n\tpublic setHighlightColor(highlightColor: HighlightColor) {\n\t\tthis.highlightColor = highlightColor;\n\t}\n\n\tpublic getShape(): Shapes {\n\t\treturn this.shape;\n\t}\n\n\tpublic setShape(shape: Shapes) {\n\t\tthis.shape = shape;\n\t}\n\n\tpublic setHSVSelectColor(cvHSVSelectColor: PixelHSV) {\n\t\tthis.cvHSVSelectColor = cvHSVSelectColor;\n\t}\n\n\tpublic setCanvasElCurrent(canvasElCurrent: HTMLCanvasElement, canvasEl2Current: HTMLCanvasElement) {\n\t\tif (!this.canvasElCurrent) {\n\t\t\tthis.canvasElCurrent = canvasElCurrent;\n\t\t}\n\n\t\tif (!this.canvasEl2Current) {\n\t\t\tthis.canvasEl2Current = canvasEl2Current;\n\t\t}\n\t}\n\n\tpublic getLatestVideoFrame() {\n\t\tif (!this.videoEl || !this.videoEl.current) {\n\t\t\tthrow new Error(\"Video is not provided\");\n\t\t}\n\n\t\treturn this.videoEl.current;\n\t}\n\n\tpublic getFrameAsImage() {\n\t\tconst image = this.canvasElCurrent?.toDataURL(\"image/png\");\n\t\tconst link = document.createElement('a');\n\t\tlink.download = `ScreenCapture${(new Date()).toISOString()}.png`;\n\t\tlink.href = image!;\n\t\tlink.click();\n\t}\n\n\tpublic draw(\n\t\tcontext: CanvasRenderingContext2D,\n\t\tcanvasElCurrent: HTMLCanvasElement,\n\t\tcontext2: CanvasRenderingContext2D,\n\t\tcanvasEl2Current: HTMLCanvasElement,\n\t\timageData: ImageData\n\t) {\n\t\tif (\n\t\t\t!this.cv.Mat\n\t\t\t|| !this.cv.MatVector\n\t\t\t|| !this.cvVideoCapture\n\t\t\t|| !this.cvDestination\n\t\t\t|| !this.cvHSVSelectColor\n\t\t\t|| !this.cvHSV\n\t\t\t|| !this.cvSource\n\t\t\t|| !this.height\n\t\t\t|| !this.width\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// use contrasted version to get contours\n\t\t// const source = this.cv.imread(canvasEl2Current);\n\t\tconst source = this.cv.matFromImageData(imageData);\n\t\tconst lowerHSV = GraphicsManipulator.GetHsvFormatted(this.cvHSVSelectColor, -HSV_THRESHOLD, 0);\n\t\tconst higherHSV = GraphicsManipulator.GetHsvFormatted(this.cvHSVSelectColor, HSV_THRESHOLD, 255);\n\t\tthis.cv.cvtColor(source, this.cvHSV, this.cv.COLOR_RGB2HSV);\n\n\t\tconst low = new this.cv.Mat(\n\t\t\tthis.cvHSV.rows,\n\t\t\tthis.cvHSV.cols,\n\t\t\tthis.cvHSV.type(),\n\t\t\tlowerHSV\n\t\t);\n\t\tconst high = new this.cv.Mat(\n\t\t\tthis.cvHSV.rows,\n\t\t\tthis.cvHSV.cols,\n\t\t\tthis.cvHSV.type(),\n\t\t\thigherHSV\n\t\t);\n\t\tthis.cv.inRange(this.cvHSV, low, high, this.cvHSV);\n\n\t\tconst contours = new this.cv.MatVector();\n\t\tconst hierarchy = new this.cv.Mat();\n\t\tthis.cv.findContours(\n\t\t\tthis.cvHSV,\n\t\t\tcontours,\n\t\t\thierarchy,\n\t\t\tthis.cv.RETR_LIST,\n\t\t\tthis.cv.CHAIN_APPROX_SIMPLE\n\t\t);\n\t\tconst groupedContoursAsRectangles = this.groupContoursAsRectangles(contours);\n\n\n\t\t// copy back over non-contrasted to produce final image\n\t\t// this.cvSource.delete();\n\t\t// this.cvDestination.delete();\n\t\t// this.cvSource = new this.cv.Mat(this.height, this.width, this.cv.CV_8UC4);\n\t\t// this.cvDestination = new this.cv.Mat(this.height, this.width, this.cv.CV_8UC1);\n\t\t// this.cvSource = this.cv.imread(canvasElCurrent);\n\t\t// this.cvSource.copyTo(this.cvDestination);\n\t\t// const newSource = this.cv.imread(canvasElCurrent);\n\t\t// const newDestination = new this.cv.Mat(this.height, this.width, this.cv.CV_8UC1);\n\t\t// newSource.copyTo(newDestination);\n\n\t\tswitch (this.shape) {\n\t\t\tcase Shapes.RECTANGLE: {\n\t\t\t\tthis.drawRect(groupedContoursAsRectangles, context);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Shapes.CIRCLE: {\n\t\t\t\tthis.drawCircle(groupedContoursAsRectangles, context);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// this.cv.imshow(canvasElCurrent, newDestination);\n\n\t\t// Clear memory and unused variables\n\t\tsource.delete();\n\t\tthis.cvHSV.delete();\n\t\tthis.cvHSV = new this.cv.Mat();\n\t\tlow.delete();\n\t\thigh.delete();\n\t\tcontours.delete();\n\t\thierarchy.delete();\n\t\tgroupedContoursAsRectangles.delete();\n\t}\n\n\tprivate setHeightAndWidth(height: number, width: number) {\n\t\tthis.height = height;\n\t\tthis.width = width;\n\t}\n\n\tprivate groupContoursAsRectangles(contours: any) {\n\t\tconst contoursAsRectangles = new this.cv.RectVector();\n\t\tconst weights = new this.cv.IntVector();\n\n\t\tfor (let i = 0; i < contours.size(); i++) {\n\t\t\tconst obj = contours.get(i);\n\t\t\tconst rect = this.cv.boundingRect(obj);\n\t\t\tcontoursAsRectangles.push_back(rect);\n\t\t\tcontoursAsRectangles.push_back(rect);\n\t\t}\n\t\tthis.cv.groupRectangles(contoursAsRectangles, weights, 1, 0.8);\n\t\tweights.delete();\n\t\treturn contoursAsRectangles;\n\t}\n\n\tprivate drawRect(contoursAsRectangles: any, context: CanvasRenderingContext2D) {\n\t\tfor (let i = 0; i < contoursAsRectangles.size(); i++) {\n\t\t\tconst rect = contoursAsRectangles.get(i);\n\t\t\tif (rect.width > BORDER_THRESHOLD && rect.height > BORDER_THRESHOLD) {\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.lineWidth = RECTANGLE_LINE_WIDTH;\n\t\t\t\tcontext.strokeStyle = this.highlightColor;\n\t\t\t\tcontext.rect(rect.x, rect.y, rect.width, rect.height);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate drawCircle(contoursAsRectangles: any, context: CanvasRenderingContext2D) {\n\t\tfor (let i = 0; i < contoursAsRectangles.size(); i++) {\n\t\t\tconst rect = contoursAsRectangles.get(i);\n\t\t\tconst radius = Math.max(rect.width, rect.height) / 2;\n\t\t\tconst centerX = rect.x + rect.width / 2;\n\t\t\tconst centerY = rect.y + rect.height / 2;\n\t\t\t// const center = new this.cv.Point(centerX, centerY);\n\t\t\tif (rect.width > BORDER_THRESHOLD && rect.height > BORDER_THRESHOLD) {\n\t\t\t\t// this.cv.circle(this.cvDestination, center, radius, this.highlightColor, CIRCLE_LINE_WIDTH, LINE_TYPE);\n\t\t\t}\n\t\t}\n\t}\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCamera, faCog, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\nimport './NavBar.css';\n\ntype NavBarProps = {\n    cvHelper: OpenCVHelper\n    height: number,\n    setHideSetting: () => void,\n    setHideHelp: () => void\n}\n\nexport const NavBar: React.FC<NavBarProps> = ({\n    cvHelper,\n    height,\n    setHideSetting,\n    setHideHelp\n}) => {\n    return(<>\n        <nav style={{ height: height }}>\n            <button onClick={setHideHelp}><FontAwesomeIcon icon={faQuestionCircle} color=\"white\" /></button>\n\t\t\t<button onClick={() => {\n\t\t\t\tcvHelper.getFrameAsImage();\n\t\t\t}}>\n\t\t\t\t<FontAwesomeIcon icon={faCamera} />\n\t\t\t</button>\n            <button onClick={setHideSetting}><FontAwesomeIcon icon={faCog} /></button>\n        </nav>\n    </>)\n}","import React from 'react';\nimport './Welcome.css';\n\ntype WelcomeProps = {\n    hide: Boolean\n}\n\nexport const Welcome: React.FC<WelcomeProps> = ({\n    hide\n}) => {\n    return (<div id=\"welcome-pu\" className={hide ? \"hidden\" : \"\"}>\n        <h1><span>Welcome to</span><br />Bold Colors</h1>\n        <p>Start by tapping an object below.</p>\n        <p>v1.0.2</p>\n    </div>);\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport './HelpPane.css';\n\ntype StepContent = {\n    image: string,\n    desc: string\n}\n\nconst instructData: Array<StepContent> = [\n    {\n        image: './img/person.png',\n        desc: 'Point application to climbing way'\n    },\n    {\n        image: './img/fingers.png',\n        desc: 'Tap on the location you\\'d like to route'\n    },\n    {\n        image: './img/brain.png',\n        desc: 'Memorize and/or photograph the route'\n    }\n];\n\ntype HelpPaneProps = {\n    hide: Boolean,\n    hideFunc: React.Dispatch<React.SetStateAction<Boolean>>,\n    windowWidth: number,\n    windowHeight: number\n}\n\nexport const HelpPane: React.FC<HelpPaneProps> = ({\n    hide,\n    hideFunc,\n    windowWidth,\n    windowHeight\n}) => {\n    const stepsContent = instructData.map((step, index) => {\n        return <Step key={index} stepData={step} />\n    });\n    const style = {\n        left: (windowWidth / 20) + \"px\",\n        top: (windowHeight / 15) + \"px\"\n    }\n    return(\n    <>\n        <div style={style} className={\"helpPane \" + (hide ? \"hidden\" : \"\")}>\n            <button onClick={() => { hideFunc(true) }}><FontAwesomeIcon icon={faTimesCircle} /></button>\n            <h1><span>How to use</span><br />Bold Colors</h1>\n            <ol>\n                {stepsContent}\n            </ol>\n        </div>\n        <div className={\"popup-bg \" + (hide ? \"hidden\" : \"\")}>&nbsp;</div>\n    </>);\n}\n\ntype StepProps = {\n    stepData: StepContent\n}\n\nconst Step: React.FC<StepProps> = ({\n    stepData\n}) => {\n    const url = \"url(\\'\" + stepData.image + \"\\')\";\n    return(<li>\n        {stepData.desc}\n        <div className=\"instruct-img\" style={{ backgroundImage: url }}>&#32;</div>\n    </li>);\n}","import React, { useState, useRef, useEffect, } from 'react';\nimport { GraphicsCore } from './components/GraphicsCore/GraphicsCore';\nimport { SettingsPane } from './components/SettingsPane/SettingsPane';\nimport { useUserMedia, USER_MEDIA_CAPTURE_OPTIONS } from './utils/mediaHooks/useUserMedia';\nimport { OpenCVHelper } from './utils/OpenCVHelper';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { Welcome } from './components/Welcome/Welcome';\nimport { HelpPane } from './components/HelpPane/HelpPane';\nimport './App.css';\n\nconst cvHelper = OpenCVHelper.newOpenCVHelper();\n\n// App is the main app that holds functionality of everything\n// \n// it does NOT control the state of the selected position. That is within GraphicsCore\nconst App: React.FC = () => {\n\tconst [hideWelcome, setHideWelcome] = useState<Boolean>(false);\n\tconst [hideSet, setHideSet] = useState<Boolean>(true);\n\tconst [hideHelp, setHideHelp] = useState<Boolean>(true);\n\n\tconst [height, setHeight] = useState<number>(window.innerHeight);\n\tconst [width, setWidth] = useState<number>(window.innerWidth);\n\tconst videoEl = useRef<HTMLVideoElement>(null);\n\tconst mediaStream = useUserMedia(USER_MEDIA_CAPTURE_OPTIONS);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tsetHeight(window.innerHeight);\n\t\t\tsetWidth(window.innerWidth);\n\t\t})\n\t})\n\n\tif (videoEl) {\n\t\tcvHelper.setVideoEl(videoEl, height * 0.9, width);\n\t}\n\n\tif (\n\t\tmediaStream\n\t\t&& videoEl.current\n\t\t&& !videoEl.current.srcObject\n\t) {\n\t\tvideoEl.current.srcObject = mediaStream;\n\t}\n\n\treturn (\n\t\t<div className=\"main-app\">\n\t\t\t<HelpPane \n\t\t\t\thide={hideHelp} \n\t\t\t\thideFunc={setHideHelp} \n\t\t\t\twindowWidth={width} \n\t\t\t\twindowHeight={height} />\n\t\t\t<Welcome hide={hideWelcome} />\n\t\t\t<GraphicsCore \n\t\t\t\tcvHelper={cvHelper} \n\t\t\t\thideWelcome={hideWelcome} \n\t\t\t\thideWelcomeFunc={setHideWelcome} />\n\t\t\t<SettingsPane \n\t\t\t\tcvHelper={cvHelper} \n\t\t\t\thide={hideSet ? \"hidden\" : \"\"} \n\t\t\t\tsetHide={setHideSet} />\n\t\t\t<div>\n\t\t\t\t<video\n\t\t\t\t\tautoPlay\n\t\t\t\t\tplaysInline\n\t\t\t\t\tmuted\n\t\t\t\t\thidden\n\t\t\t\t\tonCanPlay={() => handleCanPlay(videoEl)}\n\t\t\t\t\theight={height * 0.9}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tref={videoEl}\n\t\t\t\t\tid=\"video-el\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<NavBar \n\t\t\t\tcvHelper={cvHelper} \n\t\t\t\theight={height * 0.08}\n\t\t\t\tsetHideSetting={() => { \n\t\t\t\t\tsetHideSet(!hideSet) \n\t\t\t\t}}\n\t\t\t\tsetHideHelp={() => { \n\t\t\t\t\tsetHideHelp(!hideHelp) \n\t\t\t\t}} />\n\t\t</div>\n\t);\n}\n\n// silently fails if cannot play video\nfunction handleCanPlay(videoEl: React.RefObject<HTMLVideoElement>) {\n\tvideoEl.current?.play();\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}