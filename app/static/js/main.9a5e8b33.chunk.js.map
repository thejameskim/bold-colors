{"version":3,"sources":["utils/Shapes.ts","utils/GraphicsManipulator.ts","components/GraphicsCore/GraphicsCore.tsx","utils/HighlightColors.ts","components/SettingsPane/SettingsPane.tsx","utils/mediaHooks/useUserMedia.ts","utils/OpenCVHelper.ts","components/NavBar/NavBar.tsx","components/Welcome/Welcome.tsx","components/HelpPane/HelpPane.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Shapes","GraphicsManipulator","context","canvas","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","imageData","getImageData","data","r","g","b","pixelRGB","HSV","h","s","v","min","Math","max","delta","hsv","numToAdd","HSV4","GraphicsCore","cvHelper","hideWelcome","hideWelcomeFunc","canvasEl","useRef","useEffect","canvasUpdatingInterval","canvasElCurrent","current","getContext","setCanvasElCurrent","addEventListener","getPixelRGB","hsvSelectColor","RGBtoHSV","setHSVSelectColor","setInterval","a","toDraw","getLatestVideoFrame","drawImage","window","innerWidth","innerHeight","draw","clearInterval","width","height","setSourceAndDestination","className","ref","HIGHLIGHT_COLORS","RED","BLACK","WHITE","GREEN","BLUE","PURPLE","YELLOW","ORANGE","shapes","CIRCLE","RECTANGLE","NONE","prevHighlightColorIndex","prevShapeIndex","SettingsPane","hide","setHide","useState","shapeIndex","setShapeIndex","colorIndex","setColorIndex","highlightColors","Object","keys","map","color","id","value","onChange","selectedShape","target","selectedIndex","setShape","shape","key","toLowerCase","selectedColor","setHighlightColor","onClick","prevShape","prevColor","USER_MEDIA_CAPTURE_OPTIONS","video","facingMode","exact","useUserMedia","requestedMedia","undefined","mediaStream","setMediaStream","getTracks","forEach","track","stop","enableStream","navigator","mediaDevices","getUserMedia","stream","OpenCVHelper","cv","videoEl","cvVideoCapture","cvSource","cvDestination","cvHSV","cvHSVSelectColor","highlightColor","this","VideoCapture","setHeightAndWidth","Mat","e","console","log","CV_8UC4","CV_8UC1","Error","image","toDataURL","link","document","createElement","download","Date","toISOString","href","click","MatVector","read","copyTo","lowerHSV","GetHsvFormatted","higherHSV","cvtColor","COLOR_RGB2HSV","convertTo","low","rows","cols","type","high","inRange","contours","hierarchy","findContours","RETR_LIST","CHAIN_APPROX_SIMPLE","groupedContoursAsRectangles","groupContoursAsRectangles","drawRect","drawCircle","imshow","delete","contoursAsRectangles","RectVector","weights","IntVector","i","size","obj","get","boundingRect","push_back","groupRectangles","p1","Point","p2","rectangle","radius","centerX","centerY","center","circle","NavBar","setHideSetting","setHideHelp","style","icon","faQuestionCircle","getFrameAsImage","faCamera","faCog","Welcome","instructData","desc","HelpPane","hideFunc","windowWidth","windowHeight","stepsContent","step","index","stepData","faTimesCircle","Step","url","backgroundImage","newOpenCVHelper","App","setHideWelcome","hideSet","setHideSet","hideHelp","setHeight","setWidth","setVideoEl","srcObject","autoPlay","playsInline","muted","hidden","onCanPlay","play","handleCanPlay","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a5e8b33.chunk.js","sourcesContent":["// Shapes is the shape of the highlight outline.\r\nexport enum Shapes {\r\n\tCIRCLE = \"Circle\",\r\n\tRECTANGLE = \"Rectangle\",\r\n\tNONE = \"None\"\r\n}\r\n\r\nexport const RECTANGLE_LINE_WIDTH = 5;\r\nexport const CIRCLE_LINE_WIDTH = 5;\r\nexport const LINE_TYPE = 8;","export const BORDER_THRESHOLD = 20;\r\nexport const HSV_THRESHOLD = 30;\r\n\r\nexport class GraphicsManipulator {\r\n\tstatic getPixelRGB(\r\n\t\tcontext: CanvasRenderingContext2D,\r\n\t\tcanvas: HTMLCanvasElement,\r\n\t\tevent: MouseEvent\r\n\t): PixelRGB {\r\n\t\tconst rect = canvas.getBoundingClientRect();\r\n\t\tconst x = event.clientX - rect.left;\r\n\t\tconst y = event.clientY - rect.top;\r\n\t\tconst imageData = context.getImageData(x, y, 1, 1).data;\r\n\t\treturn {\r\n\t\t\tr: imageData[0],\r\n\t\t\tg: imageData[1],\r\n\t\t\tb: imageData[2]\r\n\t\t};\r\n\t}\r\n\r\n\t// Code taken from: http://coecsl.ece.illinois.edu/ge423/spring05/group8/finalproject/hsv_writeup.pdf\r\n\t// based on: https://docs.opencv.org/3.4/de/d25/imgproc_color_conversions.html#color_convert_rgb_hsv \r\n\tstatic RGBtoHSV(pixelRGB: PixelRGB): PixelHSV {\r\n\t\tconst { r, g, b } = pixelRGB;\r\n\r\n\t\tconst HSV: PixelHSV = {\r\n\t\t\th: 0,\r\n\t\t\ts: 0,\r\n\t\t\tv: 0\r\n\t\t}\r\n\r\n\t\tconst min = Math.min(r, g, b);\r\n\t\tconst max = Math.max(r, g, b);\r\n\r\n\t\t// V\r\n\t\tHSV.v = max;\r\n\r\n\t\t// S\r\n\t\tconst delta = max - min;\r\n\t\tif (max === 0) {\r\n\t\t\tHSV.s = 0;\r\n\t\t\tHSV.h = -1;\r\n\t\t\treturn HSV;\r\n\t\t}\r\n\r\n\t\tHSV.s = (delta / max) * 255;\r\n\r\n\t\t// H\r\n\t\tif (r === max) {\r\n\t\t\tHSV.h = (g - b) / delta;\r\n\t\t} else if (g === max) {\r\n\t\t\tHSV.h = 2 + (b - r) / delta;\r\n\t\t} else {\r\n\t\t\tHSV.h = 4 + (r - g) / delta;\r\n\t\t}\r\n\r\n\t\tHSV.h *= 60;\r\n\r\n\t\tif (HSV.h < 0) {\r\n\t\t\tHSV.h += 360;\r\n\t\t}\r\n\r\n\t\tHSV.h /= 2;\r\n\r\n\t\treturn HSV;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets formatted hsv\r\n\t * @param hsv hsv\r\n\t * @param numToAdd number to offset HSV by\r\n\t * @param HSV4 4th param opencv requests // TODO: (alpha?)\r\n\t */\r\n\tstatic GetHsvFormatted(hsv: PixelHSV, numToAdd: number, HSV4: number): number[] {\r\n\t\treturn [\r\n\t\t\thsv.h += numToAdd,\r\n\t\t\thsv.s += numToAdd,\r\n\t\t\thsv.v += numToAdd,\r\n\t\t\tHSV4\r\n\t\t]\r\n\t}\r\n}\r\n\r\nexport type PixelRGB = {\r\n\tr: number,\r\n\tg: number,\r\n\tb: number\r\n}\r\n\r\nexport type PixelHSV = {\r\n\th: number,\r\n\ts: number,\r\n\tv: number\r\n}","import React, { useRef, useEffect } from 'react';\r\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\r\nimport './GraphicsCore.css';\r\nimport { GraphicsManipulator } from '../../utils/GraphicsManipulator';\r\n\r\ntype GraphicsCoreProps = {\r\n\tcvHelper: OpenCVHelper,\r\n\thideWelcome: Boolean,\r\n\thideWelcomeFunc: React.Dispatch<React.SetStateAction<Boolean>>\r\n}\r\n\r\nconst REFRESH_RATE = 0.017;\r\nconst HEIGHT_MULTIPLIER = 0.9\r\n\r\n// GraphicsCore is the canvas element that also keeps track of all the OpenCV state information\r\nexport const GraphicsCore: React.FC<GraphicsCoreProps> = ({\r\n\tcvHelper,\r\n\thideWelcome,\r\n\thideWelcomeFunc\r\n}) => {\r\n\tconst canvasEl = useRef<HTMLCanvasElement | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet canvasUpdatingInterval: NodeJS.Timeout;\r\n\r\n\t\tif (canvasEl) {\r\n\t\t\tconst canvasElCurrent = canvasEl.current;\r\n\t\t\tif (!canvasElCurrent) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst context = canvasElCurrent.getContext('2d');\r\n\r\n\t\t\tif (!context) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcvHelper.setCanvasElCurrent(canvasElCurrent);\r\n\r\n\t\t\tcanvasElCurrent.addEventListener(\"mousedown\", (event) => {\r\n\t\t\t\tif (!hideWelcome) {\r\n\t\t\t\t\thideWelcomeFunc(true);\r\n\t\t\t\t}\r\n\t\t\t\tconst pixelRGB = GraphicsManipulator.getPixelRGB(context, canvasElCurrent, event);\r\n\t\t\t\tconst hsvSelectColor = GraphicsManipulator.RGBtoHSV(pixelRGB);\r\n\t\t\t\tcvHelper.setHSVSelectColor(hsvSelectColor);\r\n\t\t\t});\r\n\r\n\t\t\tcanvasUpdatingInterval = setInterval(async () => {\r\n\t\t\t\tlet toDraw = cvHelper.getLatestVideoFrame();\r\n\t\t\t\tcontext.drawImage(toDraw, 0, 0, window.innerWidth, window.innerHeight * HEIGHT_MULTIPLIER);\r\n\t\t\t\tcvHelper.draw(context, canvasElCurrent);\r\n\t\t\t}, REFRESH_RATE);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(canvasUpdatingInterval);\r\n\t\t}\r\n\t}, [canvasEl, cvHelper]);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"resize\", () => {\r\n\t\t\tif (canvasEl && canvasEl.current) {\r\n\t\t\t\tcanvasEl.current.width = window.innerWidth;\r\n\t\t\t\tcanvasEl.current.height = window.innerHeight * HEIGHT_MULTIPLIER;\r\n\t\t\t}\r\n\r\n\t\t\tcvHelper.setSourceAndDestination(window.innerHeight * HEIGHT_MULTIPLIER, window.innerWidth);\r\n\t\t});\r\n\r\n\t}, [canvasEl, cvHelper]);\r\n\r\n\treturn <div className=\"graphics-core\">\r\n\t\t<canvas height={window.innerHeight * HEIGHT_MULTIPLIER} width={window.innerWidth} ref={canvasEl} />\r\n\t</div>\r\n}","// HighlightColors is the highlight outline colors.\r\nexport const HIGHLIGHT_COLORS: HighlightColors = {\r\n\tRED: [255, 0, 0, 255],\r\n\tBLACK: [0, 0, 0, 255],\r\n\tWHITE: [255, 255, 255, 255],\r\n\tGREEN: [0, 255, 0, 255],\r\n\tBLUE: [0, 0, 255, 255],\r\n\tPURPLE: [102, 0, 204, 255],\r\n\tYELLOW: [255, 255, 51, 255],\r\n\tORANGE: [255, 153, 51, 255]\r\n}\r\n\r\nexport type HighlightColors = {\r\n\t[color: string]: HighlightColor\r\n}\r\n\r\nexport type HighlightColor = [number, number, number, number]","import React, { useState } from 'react';\r\nimport { Shapes } from '../../utils/Shapes';\r\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\r\nimport { HIGHLIGHT_COLORS, HighlightColor } from '../../utils/HighlightColors';\r\nimport { ReactStateSetter } from '../../utils/CallbackType';\r\nimport './SettingsPane.css';\r\n\r\ntype SettingsPaneProps = {\r\n\tcvHelper: OpenCVHelper,\r\n\thide: string,\r\n\tsetHide: React.Dispatch<React.SetStateAction<Boolean>>\r\n}\r\n\r\nconst shapes: Shapes[] = [Shapes.CIRCLE, Shapes.RECTANGLE, Shapes.NONE];\r\nlet prevHighlightColorIndex: number = 0;\r\nlet prevShapeIndex: number = 0;\r\n\r\n// SettingsPane is the bottom bar. When settings are changed, it calls callback functions \r\n// provided within the props.\r\nexport const SettingsPane: React.FC<SettingsPaneProps> = ({\r\n\tcvHelper,\r\n\thide,\r\n\tsetHide\r\n}) => {\r\n\tconst[shapeIndex, setShapeIndex] = useState<number>(0);\r\n\tconst[colorIndex, setColorIndex] = useState<number>(0);\r\n\r\n\tconst highlightColors = Object.keys(HIGHLIGHT_COLORS).map((color) => {\r\n\t\treturn color;\r\n\t})\r\n\treturn <div className={\"settings-pane \" + hide}>\r\n\t\t<h1>Settings</h1>\r\n\t\t<div id=\"shapes-pane\">\r\n\t\t\t<h2>Shape</h2>\r\n\t\t\t<select value={shapes[shapeIndex]} onChange={(event) => {\r\n\t\t\t\tconst selectedShape = shapes[event.target.selectedIndex];\r\n\t\t\t\tcvHelper.setShape(selectedShape);\r\n\t\t\t\tsetShapeIndex(event.target.selectedIndex);\r\n\t\t\t}}>\r\n\t\t\t\t{shapes.map((shape) => {\r\n\t\t\t\t\treturn <option key={shape}>\r\n\t\t\t\t\t\t{shape}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t})}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div id=\"colors-pane\">\r\n\t\t\t<h2>Color</h2>\r\n\t\t\t<select value={highlightColors[colorIndex].toLowerCase()} onChange={(event) => {\r\n\t\t\t\tconst selectedColor = HIGHLIGHT_COLORS[highlightColors[event.target.selectedIndex]];\r\n\t\t\t\tcvHelper.setHighlightColor(selectedColor);\r\n\t\t\t\tsetColorIndex(event.target.selectedIndex);\r\n\t\t\t}}>\r\n\t\t\t\t{highlightColors.map((color) => {\r\n\t\t\t\t\treturn <option key={color}>\r\n\t\t\t\t\t\t{color.toLowerCase()}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t})}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button onClick={() => {\r\n\t\t\t\tsetHide(true);\r\n\t\t\t\tprevShapeIndex = shapeIndex;\r\n\t\t\t\tprevHighlightColorIndex = colorIndex;\r\n\t\t\t}}>Save</button>\r\n\t\t\t<button onClick={() => {\r\n\t\t\t\tconst prevShape = shapes[prevShapeIndex];\r\n\t\t\t\tconst prevColor = HIGHLIGHT_COLORS[highlightColors[prevHighlightColorIndex]];\r\n\t\t\t\tcvHelper.setShape(prevShape);\r\n\t\t\t\tcvHelper.setHighlightColor(prevColor);\r\n\t\t\t\t\r\n\t\t\t\tsetColorIndex(prevHighlightColorIndex);\r\n\t\t\t\tsetShapeIndex(prevShapeIndex);\r\n\t\t\t\tsetHide(true);\r\n\t\t\t}}>Cancel</button>\r\n\t\t</div>\r\n\t</div>\r\n}","import { useState, useEffect } from 'react';\r\nimport { ReactStateSetter } from '../CallbackType';\r\n\r\n// useUserMedia is inspired by\r\n// https://blog.logrocket.com/responsive-camera-component-react-hooks/\r\n\r\nexport const USER_MEDIA_CAPTURE_OPTIONS: MediaStreamConstraints = {\r\n\tvideo: {\r\n\t\tfacingMode: \"environment\",\r\n\t\twidth: {\r\n\t\t\texact: 1280\r\n\t\t},\r\n\t\theight: {\r\n\t\t\texact: 720\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const useUserMedia = (requestedMedia: MediaStreamConstraints) => {\r\n\tconst [mediaStream, setMediaStream] = useState<MediaStream | null | undefined>(undefined);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!mediaStream) {\r\n\t\t\tenableStream(requestedMedia, setMediaStream);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Clean up and remove all media tracks\r\n\t\treturn () => {\r\n\t\t\tmediaStream.getTracks().forEach((track) => {\r\n\t\t\t\ttrack.stop();\r\n\t\t\t})\r\n\t\t}\r\n\t}, [mediaStream, requestedMedia]);\r\n\r\n\treturn mediaStream;\r\n}\r\n\r\nasync function enableStream(\r\n\trequestedMedia: MediaStreamConstraints,\r\n\tsetMediaStream: ReactStateSetter<MediaStream | null | undefined>\r\n) {\r\n\ttry {\r\n\t\tconst stream = await navigator.mediaDevices.getUserMedia(requestedMedia);\r\n\t\tsetMediaStream(stream);\r\n\t} catch (e) {\r\n\t\tsetMediaStream(null);\r\n\t}\r\n}","import { PixelHSV, GraphicsManipulator, BORDER_THRESHOLD, HSV_THRESHOLD } from '../utils/GraphicsManipulator';\r\nimport { HighlightColor, HIGHLIGHT_COLORS } from './HighlightColors';\r\nimport { Shapes, RECTANGLE_LINE_WIDTH, CIRCLE_LINE_WIDTH, LINE_TYPE } from './Shapes';\r\n\r\n// OpenCVHelper will be the helper class that does a whole bunch of god calculations for\r\n// GraphicsCore.\r\nexport class OpenCVHelper {\r\n\tstatic newOpenCVHelper() {\r\n\t\treturn new OpenCVHelper();\r\n\t}\r\n\r\n\tprivate videoEl: React.RefObject<HTMLVideoElement> | undefined = undefined;\r\n\tprivate height: number | undefined = undefined;\r\n\tprivate width: number | undefined = undefined;\r\n\tprivate cvVideoCapture: any = undefined;\r\n\tprivate cvSource: any = undefined;\r\n\tprivate cvDestination: any = undefined;\r\n\tprivate cvHSV: any = undefined;\r\n\tprivate cvHSVSelectColor: PixelHSV | undefined = undefined;\r\n\tprivate highlightColor: HighlightColor = HIGHLIGHT_COLORS.RED;\r\n\tprivate shape: Shapes = Shapes.CIRCLE;\r\n\tprivate canvasElCurrent: HTMLCanvasElement | undefined = undefined;\r\n\r\n\tconstructor(\r\n\t\tprivate cv = window.cv\r\n\t) { }\r\n\r\n\tpublic setVideoEl(videoEl: React.RefObject<HTMLVideoElement>, height: number, width: number) {\r\n\t\tthis.videoEl = videoEl;\r\n\t\tif (videoEl.current) {\r\n\t\t\ttry {\r\n\t\t\t\tif (this.videoEl.current) {\r\n\t\t\t\t\tthis.cvVideoCapture = new this.cv.VideoCapture(this.videoEl.current);\r\n\t\t\t\t}\r\n\t\t\t\tthis.setHeightAndWidth(height, width);\r\n\r\n\t\t\t\t// Check for cv.Mat to prevent race condition\t\r\n\t\t\t\tif (this.cv.Mat) {\r\n\t\t\t\t\tthis.setSourceAndDestination(height, width);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(\"ERR: \", e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setSourceAndDestination(height: number, width: number) {\r\n\t\tthis.setHeightAndWidth(height, width);\r\n\t\tthis.cvSource = new this.cv.Mat(height, width, this.cv.CV_8UC4);\r\n\t\tthis.cvDestination = new this.cv.Mat(height, width, this.cv.CV_8UC1);\r\n\t\tthis.cvHSV = new this.cv.Mat();\r\n\t}\r\n\r\n\tpublic getHighlightColor(): HighlightColor {\r\n\t\treturn this.highlightColor;\r\n\t}\r\n\r\n\tpublic setHighlightColor(highlightColor: HighlightColor) {\r\n\t\tthis.highlightColor = highlightColor;\r\n\t}\r\n\r\n\tpublic getShape(): Shapes {\r\n\t\treturn this.shape;\r\n\t}\r\n\r\n\tpublic setShape(shape: Shapes) {\r\n\t\tthis.shape = shape;\r\n\t}\r\n\r\n\tpublic setHSVSelectColor(cvHSVSelectColor: PixelHSV) {\r\n\t\tthis.cvHSVSelectColor = cvHSVSelectColor;\r\n\t}\r\n\r\n\tpublic setCanvasElCurrent(canvasElCurrent: HTMLCanvasElement) {\r\n\t\tif (!this.canvasElCurrent) {\r\n\t\t\tthis.canvasElCurrent = canvasElCurrent;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getLatestVideoFrame() {\r\n\t\tif (!this.videoEl || !this.videoEl.current) {\r\n\t\t\tthrow new Error(\"Video is not provided\");\r\n\t\t}\r\n\r\n\t\treturn this.videoEl.current;\r\n\t}\r\n\r\n\tpublic getFrameAsImage() {\r\n\t\tconst image = this.canvasElCurrent?.toDataURL(\"image/png\");\r\n\t\tconst link = document.createElement('a');\r\n\t\tlink.download = `ScreenCapture${(new Date()).toISOString()}.png`;\r\n\t\tlink.href = image!;\r\n\t\tlink.click();\r\n\t}\r\n\r\n\tpublic draw(context: CanvasRenderingContext2D, canvasElCurrent: HTMLCanvasElement) {\r\n\t\tif (\r\n\t\t\t!this.cv.Mat\r\n\t\t\t|| !this.cv.MatVector\r\n\t\t\t|| !this.cvVideoCapture\r\n\t\t\t|| !this.cvDestination\r\n\t\t\t|| !this.cvHSVSelectColor\r\n\t\t\t|| !this.cvHSV\r\n\t\t\t|| !this.cvSource\r\n\t\t\t|| !this.height\r\n\t\t\t|| !this.width\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.cvVideoCapture.read(this.cvSource);\r\n\t\tthis.cvSource.copyTo(this.cvDestination);\r\n\r\n\t\tconst lowerHSV = GraphicsManipulator.GetHsvFormatted(this.cvHSVSelectColor, -HSV_THRESHOLD, 0);\r\n\t\tconst higherHSV = GraphicsManipulator.GetHsvFormatted(this.cvHSVSelectColor, HSV_THRESHOLD, 255);\r\n\t\tthis.cv.cvtColor(this.cvSource, this.cvHSV, this.cv.COLOR_RGB2HSV);\r\n\t\tthis.cvSource.convertTo(this.cvSource, -1, 3, 60);\r\n\t\tconst low = new this.cv.Mat(\r\n\t\t\tthis.cvHSV.rows,\r\n\t\t\tthis.cvHSV.cols,\r\n\t\t\tthis.cvHSV.type(),\r\n\t\t\tlowerHSV\r\n\t\t);\r\n\t\tconst high = new this.cv.Mat(\r\n\t\t\tthis.cvHSV.rows,\r\n\t\t\tthis.cvHSV.cols,\r\n\t\t\tthis.cvHSV.type(),\r\n\t\t\thigherHSV\r\n\t\t);\r\n\t\tthis.cv.inRange(this.cvHSV, low, high, this.cvHSV);\r\n\r\n\t\tconst contours = new this.cv.MatVector();\r\n\t\tconst hierarchy = new this.cv.Mat();\r\n\t\tthis.cv.findContours(\r\n\t\t\tthis.cvHSV,\r\n\t\t\tcontours,\r\n\t\t\thierarchy,\r\n\t\t\tthis.cv.RETR_LIST,\r\n\t\t\tthis.cv.CHAIN_APPROX_SIMPLE\r\n\t\t);\r\n\t\tconst groupedContoursAsRectangles = this.groupContoursAsRectangles(contours);\r\n\r\n\t\tswitch (this.shape) {\r\n\t\t\tcase Shapes.RECTANGLE: {\r\n\t\t\t\tthis.drawRect(groupedContoursAsRectangles);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase Shapes.CIRCLE: {\r\n\t\t\t\tthis.drawCircle(groupedContoursAsRectangles);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.cv.imshow(canvasElCurrent, this.cvDestination);\r\n\r\n\t\t// Clear memory and unused variables\r\n\t\tlow.delete();\r\n\t\thigh.delete();\r\n\t\tcontours.delete();\r\n\t\thierarchy.delete();\r\n\t\tgroupedContoursAsRectangles.delete();\r\n\t}\r\n\r\n\tprivate setHeightAndWidth(height: number, width: number) {\r\n\t\tthis.height = height;\r\n\t\tthis.width = width;\r\n\t}\r\n\r\n\tprivate groupContoursAsRectangles(contours: any) {\r\n\t\tconst contoursAsRectangles = new this.cv.RectVector();\r\n\t\tconst weights = new this.cv.IntVector();\r\n\r\n\t\tfor (let i = 0; i < contours.size(); i++) {\r\n\t\t\tconst obj = contours.get(i);\r\n\t\t\tconst rect = this.cv.boundingRect(obj);\r\n\t\t\tcontoursAsRectangles.push_back(rect);\r\n\t\t\tcontoursAsRectangles.push_back(rect);\r\n\t\t}\r\n\t\tthis.cv.groupRectangles(contoursAsRectangles, weights, 1, 0.8);\r\n\t\tweights.delete();\r\n\t\treturn contoursAsRectangles;\r\n\t}\r\n\r\n\tprivate drawRect(contoursAsRectangles: any) {\r\n\t\tfor (let i = 0; i < contoursAsRectangles.size(); i++) {\r\n\t\t\tconst rect = contoursAsRectangles.get(i);\r\n\t\t\tconst p1 = new this.cv.Point(rect.x, rect.y);\r\n\t\t\tconst p2 = new this.cv.Point(rect.x + rect.width, rect.y + rect.height);\r\n\r\n\t\t\tif (rect.width > BORDER_THRESHOLD && rect.height > BORDER_THRESHOLD) {\r\n\t\t\t\tthis.cv.rectangle(this.cvDestination, p1, p2, this.highlightColor, RECTANGLE_LINE_WIDTH, LINE_TYPE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate drawCircle(contoursAsRectangles: any) {\r\n\t\tfor (let i = 0; i < contoursAsRectangles.size(); i++) {\r\n\t\t\tconst rect = contoursAsRectangles.get(i);\r\n\t\t\tconst radius = Math.max(rect.width, rect.height) / 2;\r\n\t\t\tconst centerX = rect.x + rect.width / 2;\r\n\t\t\tconst centerY = rect.y + rect.height / 2;\r\n\t\t\tconst center = new this.cv.Point(centerX, centerY);\r\n\t\t\tif (rect.width > BORDER_THRESHOLD && rect.height > BORDER_THRESHOLD) {\r\n\t\t\t\tthis.cv.circle(this.cvDestination, center, radius, this.highlightColor, CIRCLE_LINE_WIDTH, LINE_TYPE);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCamera, faCog, faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { OpenCVHelper } from '../../utils/OpenCVHelper';\r\nimport './NavBar.css';\r\n\r\ntype NavBarProps = {\r\n    cvHelper: OpenCVHelper\r\n    height: number,\r\n    setHideSetting: () => void,\r\n    setHideHelp: () => void\r\n}\r\n\r\nexport const NavBar: React.FC<NavBarProps> = ({\r\n    cvHelper,\r\n    height,\r\n    setHideSetting,\r\n    setHideHelp\r\n}) => {\r\n    return(<>\r\n        <nav style={{ height: height }}>\r\n            <button onClick={setHideHelp}><FontAwesomeIcon icon={faQuestionCircle} color=\"white\" /></button>\r\n\t\t\t<button onClick={() => {\r\n\t\t\t\tcvHelper.getFrameAsImage();\r\n\t\t\t}}>\r\n\t\t\t\t<FontAwesomeIcon icon={faCamera} />\r\n\t\t\t</button>\r\n            <button onClick={setHideSetting}><FontAwesomeIcon icon={faCog} /></button>\r\n        </nav>\r\n    </>)\r\n}","import React from 'react';\r\nimport './Welcome.css';\r\n\r\ntype WelcomeProps = {\r\n    hide: Boolean\r\n}\r\n\r\nexport const Welcome: React.FC<WelcomeProps> = ({\r\n    hide\r\n}) => {\r\n    return(<div id=\"welcome-pu\" className={hide ? \"hidden\" : \"\"}>\r\n        <h1><span>Welcome to</span><br />Bold Colors</h1>\r\n        <p>Start by tapping an object below</p>\r\n    </div>);\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport './HelpPane.css';\r\n\r\ntype StepContent = {\r\n    image: string,\r\n    desc: string\r\n}\r\n\r\nconst instructData: Array<StepContent> = [\r\n    {\r\n        image: './img/person.png',\r\n        desc: 'Point application to climbing way'\r\n    },\r\n    {\r\n        image: './img/fingers.png',\r\n        desc: 'Tap on the location you\\'d like to route'\r\n    },\r\n    {\r\n        image: './img/brain.png',\r\n        desc: 'Memorize and/or photograph the route'\r\n    }\r\n];\r\n\r\ntype HelpPaneProps = {\r\n    hide: Boolean,\r\n    hideFunc: React.Dispatch<React.SetStateAction<Boolean>>,\r\n    windowWidth: number,\r\n    windowHeight: number\r\n}\r\n\r\nexport const HelpPane: React.FC<HelpPaneProps> = ({\r\n    hide,\r\n    hideFunc,\r\n    windowWidth,\r\n    windowHeight\r\n}) => {\r\n    const stepsContent = instructData.map((step, index) => {\r\n        return <Step key={index} stepData={step} />\r\n    });\r\n    const style = {\r\n        left: (windowWidth / 20) + \"px\",\r\n        top: (windowHeight / 15) + \"px\"\r\n    }\r\n    return(\r\n    <>\r\n        <div style={style} className={\"helpPane \" + (hide ? \"hidden\" : \"\")}>\r\n            <button onClick={() => { hideFunc(true) }}><FontAwesomeIcon icon={faTimesCircle} /></button>\r\n            <h1><span>How to use</span><br />Bold Colors</h1>\r\n            <ol>\r\n                {stepsContent}\r\n            </ol>\r\n        </div>\r\n        <div className={\"popup-bg \" + (hide ? \"hidden\" : \"\")}>&nbsp;</div>\r\n    </>);\r\n}\r\n\r\ntype StepProps = {\r\n    stepData: StepContent\r\n}\r\n\r\nconst Step: React.FC<StepProps> = ({\r\n    stepData\r\n}) => {\r\n    const url = \"url(\\'\" + stepData.image + \"\\')\";\r\n    return(<li>\r\n        {stepData.desc}\r\n        <div className=\"instruct-img\" style={{ backgroundImage: url }}>&#32;</div>\r\n    </li>);\r\n}","import React, { useState, useRef, useEffect, } from 'react';\r\nimport { GraphicsCore } from './components/GraphicsCore/GraphicsCore';\r\nimport { SettingsPane } from './components/SettingsPane/SettingsPane';\r\nimport { useUserMedia, USER_MEDIA_CAPTURE_OPTIONS } from './utils/mediaHooks/useUserMedia';\r\nimport { OpenCVHelper } from './utils/OpenCVHelper';\r\nimport { NavBar } from './components/NavBar/NavBar';\r\nimport { Welcome } from './components/Welcome/Welcome';\r\nimport { HelpPane } from './components/HelpPane/HelpPane';\r\nimport './App.css';\r\n\r\nconst cvHelper = OpenCVHelper.newOpenCVHelper();\r\n\r\n// App is the main app that holds functionality of everything\r\n// \r\n// it does NOT control the state of the selected position. That is within GraphicsCore\r\nconst App: React.FC = () => {\r\n\tconst [hideWelcome, setHideWelcome] = useState<Boolean>(false);\r\n\tconst [hideSet, setHideSet] = useState<Boolean>(true);\r\n\tconst [hideHelp, setHideHelp] = useState<Boolean>(true);\r\n\r\n\tconst [height, setHeight] = useState<number>(window.innerHeight);\r\n\tconst [width, setWidth] = useState<number>(window.innerWidth);\r\n\tconst videoEl = useRef<HTMLVideoElement>(null);\r\n\tconst mediaStream = useUserMedia(USER_MEDIA_CAPTURE_OPTIONS);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"resize\", () => {\r\n\t\t\tsetHeight(window.innerHeight);\r\n\t\t\tsetWidth(window.innerWidth);\r\n\t\t})\r\n\t})\r\n\r\n\tif (videoEl) {\r\n\t\tcvHelper.setVideoEl(videoEl, height * 0.9, width);\r\n\t}\r\n\r\n\tif (\r\n\t\tmediaStream\r\n\t\t&& videoEl.current\r\n\t\t&& !videoEl.current.srcObject\r\n\t) {\r\n\t\tvideoEl.current.srcObject = mediaStream;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"main-app\">\r\n\t\t\t<HelpPane \r\n\t\t\t\thide={hideHelp} \r\n\t\t\t\thideFunc={setHideHelp} \r\n\t\t\t\twindowWidth={width} \r\n\t\t\t\twindowHeight={height} />\r\n\t\t\t<Welcome hide={hideWelcome} />\r\n\t\t\t<GraphicsCore \r\n\t\t\t\tcvHelper={cvHelper} \r\n\t\t\t\thideWelcome={hideWelcome} \r\n\t\t\t\thideWelcomeFunc={setHideWelcome} />\r\n\t\t\t<SettingsPane \r\n\t\t\t\tcvHelper={cvHelper} \r\n\t\t\t\thide={hideSet ? \"hidden\" : \"\"} \r\n\t\t\t\tsetHide={setHideSet} />\r\n\t\t\t<div>\r\n\t\t\t\t<video\r\n\t\t\t\t\tautoPlay\r\n\t\t\t\t\tplaysInline\r\n\t\t\t\t\tmuted\r\n\t\t\t\t\thidden\r\n\t\t\t\t\tonCanPlay={() => handleCanPlay(videoEl)}\r\n\t\t\t\t\theight={height * 0.9}\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tref={videoEl}\r\n\t\t\t\t\tid=\"video-el\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<NavBar \r\n\t\t\t\tcvHelper={cvHelper} \r\n\t\t\t\theight={height * 0.08}\r\n\t\t\t\tsetHideSetting={() => { \r\n\t\t\t\t\tsetHideSet(!hideSet) \r\n\t\t\t\t}}\r\n\t\t\t\tsetHideHelp={() => { \r\n\t\t\t\t\tsetHideHelp(!hideHelp) \r\n\t\t\t\t}} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// silently fails if cannot play video\r\nfunction handleCanPlay(videoEl: React.RefObject<HTMLVideoElement>) {\r\n\tvideoEl.current?.play();\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}